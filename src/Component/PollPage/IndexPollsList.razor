@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFilePollService PollService
@inject JsonFileUserService UserService


<div class="container">
    <div class="row">
        @{
            var pollList = PollService.GetPolls().ToList();
            foreach (PollModel poll in pollList)
            {

                <div class="col-4">
                    <div class="card text-white bg-dark mb-3">
                        <div class="card-body">
                            <h2 class="card-title"> @poll.Title</h2>
                            <hr />
                            <p class="card-subtitle">  @poll.Description </p>
                            <div class="card-body">
                                @foreach (OpinionItem item in poll.OpinionItems.ToList())
                                {
                                    //opinion = item.OpinionName;

                                    <div class="row">
                                        <div class="col-auto">

                                            <input @onchange="(e) => UpdateOpinionInput(item.OpinionName, poll.PollID)" class="form-check-input" type="radio" name="@item.OpinionName" id="@item.OpinionName" value="@opinion">

                                            <label>@item.OpinionName</label>
                                        </div>
                                        <div class="col-auto">
                                            <label>Votes: @item.NumCounts</label>
                                        </div>
                                    </div>

                                }

                            </div>

                            @{
                                var getAuthor = UserService.GetUser(poll.UserID);

                                // Author No Longer Exists: Account Was Deleted
                                if (getAuthor != null)
                                {
                                    <label>Author Name: @getAuthor.Username</label>
                                    <label>Author Location: @getAuthor.Location</label>
                                }
                            }
                            <hr />
                            <button @onclick="(e => SubmitVote(PollID, opinion))" name="voteBtn" id="voteBtn" class="btn btn-outline-success">Submit Vote</button>
                            <a class="btn btn-outline-primary">Edit Poll</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>


@code {

    int PollID = -99;
    string opinion = "";



    void UpdateOpinionInput(string inputValue, int inputID)
    {
        opinion = inputValue;
        PollID = inputID;
    }

    bool SubmitVote(int pollidInput, string opinionInput)
    {
        if (pollidInput < 0)
        {
            return false;
        }

        return PollService.UpdatePollModelOpinion(pollidInput, opinionInput);
    }
}