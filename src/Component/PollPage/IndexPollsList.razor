@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFilePollService PollService
@inject JsonFileUserService UserService


<div class="container">
    <div class="row">
        @{
            var pollList = PollService.GetPolls().ToList();
            foreach (PollModel poll in pollList)
            {
                int opinionVoteCount = PollService.GetTotalVotes(poll);

                <div class="col-4">
                    <div class="card text-white bg-dark mb-3">
                                <div class="card-body">
                                    <h2 class="card-title"> @poll.Title</h2>
                                    <hr />
                                    <p class="card-subtitle">  @poll.Description </p>

                                    <hr />
                                    <!-- Button trigger modal -->
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter-@poll.PollID">
                                        View Poll
                                    </button>
                                    <a class="btn btn-outline-primary">Edit Poll</a>

                                    <!-- Modal -->
                                    <div class="modal fade" id="exampleModalCenter-@poll.PollID" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="exampleModalLongTitle">@poll.Title</h5>
                                                </div>
                                                <div class="modal-body">
                                                    <p>@poll.Description</p>
                                                    @foreach (OpinionItem items in poll.OpinionItems)
                                                    {
                                                        <div class="col-auto">
                                                            <input @onchange="(e) => UpdateOpinionInput(items.OpinionName, poll.PollID)" class="form-check-input" type="radio" name="itemButtons" id="@items.OpinionName" value="@items.OpinionName">
                                                            <label>@items.OpinionName</label>
                                                        </div>
                                                        <div class="col-auto">
                                                            @{
                                                                double percentage = 0;
                                                                if (opinionVoteCount != 0)
                                                                {
                                                                    percentage = (items.NumCounts * 100) / opinionVoteCount;
                                                                }

                                                                <div class="progress">
                                                                    <div class="progress-bar bg-info" role="progressbar" style="width: @percentage%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@percentage%</div>
                                                                </div>
                                                                <label>Votes : @items.NumCounts</label>
                                                            }
                                                        </div>

                                                    }
                                                    <br />
                                                    @{
                                                        var getAuthor = UserService.GetUser(poll.UserID);

                                                        // Author No Longer Exists: Account Was Deleted
                                                        if (getAuthor != null)
                                                        {
                                                            <label>Author Name: @getAuthor.Username</label> <br />
                                                            <label>Author Location: @getAuthor.Location</label>
                                                        }
                                                    }
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    <button @onclick="(e => SubmitVote(PollID, Opinion))" name="voteBtn" id="voteBtn" class="btn btn-outline-success">Submit Vote</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                    </div>
                </div>
            }
        }
    </div>
</div>


@code {

    /// <summary>
    /// Poll ID Attribute
    /// </summary>
    int PollID = -99;

    /// <summary>
    /// Opinion Attribute
    /// </summary>
    string Opinion = "";

    /// <summary>
    /// Update PollID and opinion attributes
    /// </summary>
    /// <param name="inputValue"></param>
    /// <param name="inputID"></param>
    void UpdateOpinionInput(string inputValue, int inputID)
    {
        // Update opinion
        Opinion = inputValue;
        // Update PollID
        PollID = inputID;
    }

    /// <summary>
    /// Submit Vote to be Incremented
    /// </summary>
    /// <param name="pollidInput"></param>
    /// <param name="opinionInput"></param>
    /// <returns></returns>
    bool SubmitVote(int pollidInput, string opinionInput)
    {
        // Validate Poll ID Input
        if (pollidInput < 0)
        {
            return false;
        }

        // Send it to Poll Services and Return the Result
        return PollService.UpdateOpinionVote(pollidInput, opinionInput);
    }
}